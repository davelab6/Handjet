#----------------------------------------------------------------------------
# Main feature file

# Tables
include(tables.fea);


#----------------------------------------------------------------------------
# Language systems

languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem cyrl dflt;
languagesystem latn TRK;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem latn NLD;
#languagesystem latn VIT;
languagesystem cyrl SRB;
languagesystem cyrl MKD;
languagesystem cyrl BGR;



#----------------------------------------------------------------------------
# Classes


#----------------------------------------------------------------------------
# Features


#----------------------------------------------------------------------------
# Access all alternates

feature aalt {
    feature locl;
    feature case;
    feature sups;
    feature sinf;
    feature ordn;
    feature numr;
    feature dnom;
    feature frac;

    sub period by ellipsis;
    sub hyphen from [endash emdash minus];
} aalt;


#----------------------------------------------------------------------------
# Composition of accented characters

@uppercase = [A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Agrave Aacute Acircumflex Atilde Amacron Abreve Adieresis Aring Aogonek Aringacute Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Ahookabove Adotbelow AE AEacute Cacute Ccircumflex Cdotaccent Ccaron Ccedilla Dcaron Dcroat Eth Egrave Eacute Ecircumflex Emacron Ebreve Edotaccent Edieresis Ecaron Eogonek Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Ehookabove Etilde Edotbelow Gcircumflex Gbreve Gdotaccent Gcommaaccent Hcircumflex Hbar Igrave Iacute Icircumflex Itilde Imacron Ibreve Idotaccent Idieresis Iogonek Ihookabove Idotbelow IJ Jacute Jcircumflex Kcommaaccent Lacute Lcommaaccent Lcaron Ldot Lslash Nacute Ntilde Ncaron Eng Ncommaaccent Ograve Oacute Ocircumflex Otilde Omacron Obreve Odieresis Ohungarumlaut Oslash Oslashacute Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Odotbelow OE Racute Rcaron Rcommaaccent Sacute Scircumflex Scaron Scommaaccent Scedilla Germandbls Tcaron Tcommaaccent Tcedilla Tbar Ugrave Uacute Ucircumflex Utilde Umacron Ubreve Udieresis Uring Uhungarumlaut Uogonek Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Udotbelow Wgrave Wacute Wcircumflex Wdieresis Ygrave Yacute Ycircumflex Ydieresis Yhookabove Ydotbelow Ytilde Zacute Zdotaccent Zcaron Thorn Schwa DZ Dz DZcaron Dzcaron LJ Lj NJ Nj c.A c.Be c.Ve c.Ghe c.De c.Ie c.Zhe c.Ze c.I c.Ishort c.Ka c.El c.Em c.En c.O c.Pe c.Er c.Es c.Te c.U c.Ef c.Ha c.Tse c.Che c.Sha c.Shcha c.Hard c.Yeru c.Soft c.E c.Yu c.Ya c.Gje c.GheUkr c.Dje c.IeUkr c.Dze c.Iegrave c.Io c.IUkr c.Yi c.Je c.Igrave c.Kje c.Lje c.Nje c.Tshe c.Yushort c.Dzhe c.Yat c.Fita c.Izhitsa c.Ghebar c.Zhespike c.Kaspike c.Enspike c.Haspike c.Chespike c.Ustraight c.Ustraightbar c.Shha c.Palochka c.Schwa c.Imacron c.Obar c.Umacron c.Zehook c.KaBashkir c.Eshook c.Abreve c.Iebreve c.Udblacute c.Odieresis c.AIe c.De.BGR c.El.BGR Alpha Beta Gamma Delta Epsilon Zeta Eta Theta Iota Kappa Lambda Mu Nu Xi Omicron Pi Rho Sigma Tau Upsilon Phi Chi Psi Omega Alphatonos Epsilontonos Etatonos Iotatonos Iotadieresis Omicrontonos Upsilontonos Upsilondieresis Omegatonos;

@combining_top_accents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
@markscomb = [gravecomb acutecomb circumflexcomb caroncomb];
@markscomb_case = [gravecomb.case acutecomb.case circumflexcomb.case caroncomb.case];

feature ccmp {
    lookup ccmp_Other_1 {
        @combining_nontop_accents = [cedillacomb ogonekcomb];
        sub [i]' @combining_top_accents by [idotless];
        sub [i]' @combining_nontop_accents @combining_top_accents by [idotless];
        sub @uppercase @markscomb' by @markscomb_case;
    } ccmp_Other_1;

    lookup ccmp_Other_2 {
        sub @markscomb_case @markscomb' by @markscomb_case;
    } ccmp_Other_2;
} ccmp;


#----------------------------------------------------------------------------
# Localized forms

feature locl {
    sub firsttonechinese by macroncomb;
    sub secondtonechinese by acutecomb;
    sub fourthtonechinese by gravecomb;

    script latn; # Latin
        # i -> idotaccent substitution effectively switches off the fi and ffi ligatures
        language TRK; # Turkish
            lookup LOCL_TRK {
                sub i by idotaccent;
            } LOCL_TRK;
        language AZE; # Azeri
            lookup LOCL_TRK;
        language CRT; # Crimean Tatar
            lookup LOCL_TRK;
        language KAZ; # Kazakh
            lookup LOCL_TRK;
        language TAT; # Tatar
            lookup LOCL_TRK;

        # handling of S and T with commaaccent
        language ROM; # Romanian
            lookup LOCL_ROM {
                sub Scedilla by Scommaaccent;
                sub scedilla by scommaaccent;
                sub Tcedilla by Tcommaaccent;
                sub tcedilla by tcommaaccent;
            } LOCL_ROM;
        language MOL; # Moldavian
            lookup LOCL_ROM;

        # Catalan dot
        language CAT; # Catalan
            sub l periodcentered' l by periodcentered.CAT;
            sub L periodcentered' L by periodcentered.CAT.case;

        # Dutch ij and ij with acute
        # some overlap with ccmp as ccmp gets removed from Latin-only version
        language NLD; # Dutch
            lookup LOCL_DUTCHIJ_DECOMPOSE {
                sub ij by i j;
                sub IJ by I J;  
            } LOCL_DUTCHIJ_DECOMPOSE;
            lookup LOCL_DUTCHJACUTE {
                sub i' j acutecomb by iacute;
                sub I' J acutecomb by Iacute;
                sub iacute j' acutecomb' by jacute;
                sub Iacute J' acutecomb' by Jacute;
                sub iacute j' by jacute;
                sub Iacute J' by Jacute;
            } LOCL_DUTCHJACUTE;
            lookup LOCL_DUTCHIJACUTE_COMPOSE {
                sub ij acutecomb by iacute_j.NLD;
                sub IJ acutecomb by Iacute_J.NLD;
                sub i j acutecomb by iacute_j.NLD;
                sub I J acutecomb by Iacute_J.NLD;
            } LOCL_DUTCHIJACUTE_COMPOSE;
        language VIT;
            sub circumflexcomb acutecomb by circumflexacutecomb;
            sub circumflexcomb gravecomb by circumflexgravecomb;
            sub circumflexcomb hookabovecomb by circumflexhookabovecomb;
            sub circumflexcomb tildecomb by circumflextildecomb;

    script cyrl;
        language SRB; # Serbian
            lookup LOCL_SRB {
                sub c.be by c.be.SRB;
            } LOCL_SRB;
        language MKD; # Moldavian
            lookup LOCL_SRB;
        language BGR; # Bulgarian
            lookup LOCL_BGR {
                sub c.De by c.De.BGR;
                sub c.El by c.El.BGR;
                sub c.ve by c.ve.BGR;
                sub c.ghe by c.ghe.BGR;
                sub c.de by c.de.BGR;
                sub c.zhe by c.zhe.BGR;
                sub c.ze by c.ze.BGR;
                sub c.i by c.i.BGR;
                sub c.ishort by c.ishort.BGR;
                sub c.igrave by c.igrave.BGR;
                sub c.ka by c.ka.BGR;
                sub c.el by c.el.BGR;
                sub c.pe by c.pe.BGR;
                sub c.te by c.te.BGR;
                sub c.tse by c.tse.BGR;
                sub c.sha by c.sha.BGR;
                sub c.shcha by c.shcha.BGR;
                sub c.yu by c.yu.BGR;
            } LOCL_BGR;
} locl;



#----------------------------------------------------------------------------
# Case-sensitive forms

@brackets = [parenleft parenright bracketleft bracketright braceleft braceright angledbracketleft angledbracketright bar brokenbar];

@hyphens = [hyphen softhyphen hyphentwo nonbreakinghyphen hyphen.case];

@greek_uppercase_tonos = [Alphatonos Epsilontonos Etatonos Iotatonos Omicrontonos Upsilontonos Omegatonos];

@greek_uppercase_non_tonos = [Alpha Epsilon Eta Iota Omicron Upsilon Omega];

feature case {
    sub questiondown by questiondown.case;
    sub exclamdown by exclamdown.case;
    sub at by at.case;
    sub @hyphens by hyphen.case;
    sub colon by colon.case;
    sub endash by endash.case;
    sub emdash by emdash.case;
    sub guilsinglleft by guilsinglleft.case;
    sub guilsinglright by guilsinglright.case;
    sub guillemetleft by guillemetleft.case;
    sub guillemetright by guillemetright.case;
    sub circumflexcomb by circumflexcomb.case;
    sub caroncomb by caroncomb.case;
    sub brevecomb by brevecomb.case;
    sub acutecomb by acutecomb.case;
    sub gravecomb by gravecomb.case;
    sub circumflextildecomb by circumflextildecomb.case;
    sub circumflexgravecomb by circumflexgravecomb.case;
    sub circumflexhookabovecomb by circumflexhookabovecomb.case;
    sub circumflexacutecomb by circumflexacutecomb.case;
    sub bulletoperator by bulletoperator.case;
    sub periodcentered.CAT by periodcentered.CAT.case;
    sub tonoscomb by tonoscomb.case;

    # Greek

    # a fix for monotonic and polytonic orthography in all-cap setting
    # add dialytika after letters with tonos, varia, or oxia
    sub @greek_uppercase_tonos [Upsilon Iota]' by [Upsilondieresis Iotadieresis];    
    # remove accents in all-cap setting
    sub @greek_uppercase_tonos by @greek_uppercase_non_tonos;

    # shift some punctuation
    pos bullet <0 60 0 0>;
    pos @brackets <0 60 0 0>;

    # German Eszett
    # to fix apps which do not support the new orthography yet

    sub germandbls by Germandbls;
} case;


#----------------------------------------------------------------------------
# Superiors & inferiors

feature sups {
    lookup SUPS {
        sub zero by zerosuperior;
        sub one by onesuperior;
        sub two by twosuperior;
        sub three by threesuperior;
        sub four by foursuperior;
        sub five by fivesuperior;
        sub six by sixsuperior;
        sub seven by sevensuperior;
        sub eight by eightsuperior;
        sub nine by ninesuperior;
    } SUPS;
} sups;

feature sinf {
    lookup SINF {
        sub zero by zerosuperior;
        sub one by onesuperior;
        sub two by twosuperior;
        sub three by threesuperior;
        sub four by foursuperior;
        sub five by fivesuperior;
        sub six by sixsuperior;
        sub seven by sevensuperior;
        sub eight by eightsuperior;
        sub nine by ninesuperior;
    } SINF;
} sinf;

feature subs {
	lookup SINF;
} subs;


#----------------------------------------------------------------------------
# Ordinals

@ordn_from = [a o];
@ordn_to = [ordfeminine ordmasculine];

feature ordn {
    sub [zero one two three four five six seven eight nine] @ordn_from' by @ordn_to;
    sub @ordn_to @ordn_from' by @ordn_to;
    sub N o period by numero;
} ordn;


#----------------------------------------------------------------------------
# Numerators

feature numr {
    lookup SUPS;
} numr;


#----------------------------------------------------------------------------
# Denominators

feature dnom {
    lookup SINF;
} dnom;


#----------------------------------------------------------------------------
# Fractions

feature frac {
    @numerators = [zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior];

    @denominators = [zeroinferior oneinferior twoinferior threeinferior fourinferior fiveinferior sixinferior seveninferior eightinferior nineinferior];

    @figures = [zero one two three four five six seven eight nine];

    lookup percent {
    sub zero [slash fraction divisionslash] zero by percent;
    sub zero [slash fraction divisionslash] zero zero by perthousand;
    } percent;
    lookup FractionBar {
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             @figures
             slash';
         ignore sub slash'
             @figures
             @figures
             slash;
         ignore sub slash
             @figures
             slash';
         ignore sub slash'
             @figures
             slash;
         sub @figures slash' @figures by fraction;
    } FractionBar;

    lookup Numerator1 {
         sub @figures'
         fraction by @numerators;
    } Numerator1;

    lookup Denominator {
         sub [fraction @denominators]
         @figures' by @denominators;
    } Denominator;

    sub @figures space' @numerators by thinspace;

    # Vulgar fractions
    sub onesuperior fraction twoinferior by onehalf;
    sub onesuperior fraction threeinferior by onethird;
    sub twosuperior fraction threeinferior by twothirds;
    sub onesuperior fraction fourinferior by onequarter;
    sub threesuperior fraction fourinferior by threequarters;
    sub onesuperior fraction fiveinferior by onefifth;
    sub twosuperior fraction fiveinferior by twofifths;
    sub threesuperior fraction fiveinferior by threefifths;
    sub foursuperior fraction fiveinferior by fourfifths;
    sub onesuperior fraction sixinferior by onesixth;
    sub fivesuperior fraction sixinferior by fivesixths;
    sub onesuperior fraction seveninferior by oneseventh;
    sub twosuperior fraction seveninferior by twosevenths;
    sub threesuperior fraction seveninferior by threesevenths;
    sub foursuperior fraction seveninferior by foursevenths;
    sub fivesuperior fraction seveninferior by fivesevenths;
    sub sixsuperior fraction seveninferior by sixsevenths;
    sub onesuperior fraction eightinferior by oneeighth;
    sub threesuperior fraction eightinferior by threeeighths;
    sub fivesuperior fraction eightinferior by fiveeighths;
    sub sevensuperior fraction eightinferior by seveneighths;
    sub onesuperior fraction nineinferior by oneninth;
    sub twosuperior fraction nineinferior by twoninths;
    sub foursuperior fraction nineinferior by fourninths;
    sub fivesuperior fraction nineinferior by fiveninths;
    sub sevensuperior fraction nineinferior by sevenninths;
    sub eightsuperior fraction nineinferior by eightninths;
} frac;



#----------------------------------------------------------------------------
# Ligatures

feature liga {
    sub idieresis idieresis by idieresis_idieresis;
} liga;



#----------------------------------------------------------------------------
# Discretionary ligatures

feature dlig {
	lookup ANIMALS {
	    sub colon c a t by cat;
	    sub colon b l a c k c a t by cat.black;
	    sub colon r i g h t c a t t t by cat.taller.right;
	    sub colon r i g h t c a t t by cat.tall.right;
	    sub colon r i g h t c a t by cat.right;
	    sub colon b l a c k r i g h t c a t t t by cat.black.taller.right;
	    sub colon b l a c k r i g h t c a t t by cat.black.tall.right;
	    sub colon b l a c k r i g h t c a t by cat.black.right;
	    
	    sub colon o w l  by owl;
	    sub colon f l y i n g o w l  by owl.flying;
	    sub colon b l a c k o w l by owl.black;
	    sub colon b l a c k f l y i n g o w l by owl.black.flying;

	    sub lozenge [bar slash] by lozenge.pica;
	    sub less [bar slash] greater by lozenge.pica;
	} ANIMALS;

	lookup CATS_1 {
		sub [cat cat.black] t' t' by cat.tallertail;
		sub [cat cat.black] t' by cat.talltail;
	} CATS_1;

	lookup CATS_2 {
		sub cat' [cat.tallertail cat.talltail] by cat.body;
		sub cat.black' [cat.tallertail cat.talltail] by cat.black.body;
	} CATS_2;

	lookup KASHIDOGS_LEFT {
		sub colon' d' [o dog.body dog.butt] by dog.head;
		sub [dog.head dog.body] o' g' by dog.butt;
		sub [dog.head dog.body] o' by dog.body;
		sub colon' b' l' a' c' k' d' [o dog.body dog.butt] by dog.black.head;
		sub [dog.black.head dog.black.body] o' g' by dog.black.butt;
		sub [dog.black.head dog.black.body] o' by dog.black.body;
	} KASHIDOGS_LEFT;

	lookup KASHIDOGS_RIGHT {
		sub colon' r' i' g' h' t' d' [o dog.body dog.head.right] by dog.butt.right;
		sub [dog.butt.right dog.body] o' g' by dog.head.right;
		sub [dog.butt.right dog.body] o' by dog.body;
		
		sub colon' b' l' a' c' k' r' i' g' h' t' d' [o dog.body dog.head.right] by dog.black.butt.right;
		sub [dog.black.butt.right dog.black.body] o' g' by dog.black.head.right;
		sub [dog.black.butt.right dog.black.body] o' by dog.black.body;
	} KASHIDOGS_RIGHT;
} dlig;

feature cpsp {
	pos @uppercase <30 0 60 0>;
} cpsp;

